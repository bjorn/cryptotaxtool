import { ComboBox, HorizontalBox, ListView, VerticalBox, StandardListView } from "std-widgets.slint";
import { CapitalGains } from "./capital-gains.slint";
import {
    Cell,
    CurrencyIcon,
    ElidingText,
    TextCell,
    HeaderCell
} from "./common.slint";
import { UiTaxReport } from "./structs.slint";

export component Reports inherits Rectangle {
    in property <[StandardListViewItem]> report-years <=> year-list.model;
    in property <[UiTaxReport]> reports;

    property <UiTaxReport> report: reports[year-list.current-item];

    HorizontalBox {
        padding: 0;

        year-list := StandardListView {
            current-item: 0;
            min-width: 80px;
            max-width: 150px;
        }

        VerticalBox {
            horizontal-stretch: 10;
            padding: 0;

            HorizontalLayout {
                VerticalLayout {
                    width: 50%;
                    HorizontalBox {
                        padding: 3px;
                        Text {
                            text: "Net Capital Gains";
                            font-size: 15px;
                            font-weight: 600;
                        }
                        Text {
                            text: report.net-capital-gains;
                            horizontal-alignment: right;
                            font-size: 15px;
                            font-weight: 600;
                        }
                    }
                    HorizontalBox {
                        padding: 3px;
                        Text {
                            text: "Short Term Capital Gains";
                            opacity: 0.8;
                        }
                        Text {
                            text: report.short-term-capital-gains;
                            horizontal-alignment: right;
                        }
                    }
                    HorizontalBox {
                        padding: 3px;
                        Text {
                            text: "Long Term Capital Gains";
                            opacity: 0.8;
                        }
                        Text {
                            text: report.long-term-capital-gains;
                            horizontal-alignment: right;
                        }
                    }
                    HorizontalBox {
                        padding: 3px;
                        Text {
                            text: "Total Capital Losses";
                            opacity: 0.8;
                        }
                        Text {
                            text: report.total-capital-losses;
                            horizontal-alignment: right;
                        }
                    }
                }
            }

            HorizontalLayout {
                alignment: start;
                report-combo := ComboBox {
                    model: [
                        "Report Summary",
                        "Capital Gains Report"
                    ];
                    current-index: 0;
                }
            }

            Rectangle {
                VerticalLayout {
                    spacing: 2px;
                    visible: report-combo.current-index == 0;

                    HorizontalLayout {
                        padding: 2px;
                        spacing: 2px;
                        padding-right: 15px;
                        // width: summary-view.visible-width;   // what we want, but causes binding loop

                        HeaderCell { text: "Currency"; }
                        HeaderCell { text: "Starting Balance"; }
                        HeaderCell { text: "Ending Balance"; }
                        HeaderCell { text: "Quantity Disposed"; }
                        HeaderCell { text: "Cost"; }
                        HeaderCell { text: "Fees"; }
                        HeaderCell { text: "Proceeds"; }
                        HeaderCell { text: "Capital P/L"; }
                        HeaderCell { text: "Income"; }
                        HeaderCell { text: "Total P/L"; }
                    }

                    Rectangle {
                        height: 1px;
                        background: white;
                        opacity: 0.25;
                    }

                    summary-view := ListView {
                        for currency_summary[index] in report.currencies: Rectangle {
                            property <bool> even: mod(index, 2) == 0;

                            background: touch.has-hover ? #4564 : even ? #ffffff06 : transparent;
                            border-radius: self.height / 4;

                            touch := TouchArea {}

                            HorizontalLayout {
                                padding: 2px;
                                spacing: 2px;

                                Cell {
                                    CurrencyIcon {
                                        cmc-id: currency-summary.currency-cmc-id;
                                    }
                                    ElidingText {
                                        text: currency_summary.currency;
                                    }
                                }
                                TextCell { text: currency_summary.balance_start; }
                                TextCell { text: currency_summary.balance_end; }
                                TextCell { text: currency_summary.quantity_disposed; }
                                TextCell { text: currency_summary.cost; }
                                TextCell { text: currency_summary.fees; }
                                TextCell { text: currency_summary.proceeds; }
                                TextCell { text: currency_summary.capital_profit_loss; }
                                TextCell { text: currency_summary.income; }
                                TextCell { text: currency_summary.total_profit_loss; }
                            }
                        }
                    }
                }

                CapitalGains {
                    visible: report-combo.current-index == 1;
                    gain-entries: report.gains;
                    width: 100%;
                    height: 100%;
                }
            }
        }
    }
}
